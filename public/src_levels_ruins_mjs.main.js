"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgame_server"] = self["webpackChunkgame_server"] || []).push([["src_levels_ruins_mjs"],{

/***/ "./src/config.mjs":
/*!************************!*\
  !*** ./src/config.mjs ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DIRECTION\": () => (/* binding */ DIRECTION)\n/* harmony export */ });\nconst DIRECTION = {\n  LEFT: -1,\n  RIGHT: 1,\n}\n\n\n//# sourceURL=webpack://game-server/./src/config.mjs?");

/***/ }),

/***/ "./src/controller.mjs":
/*!****************************!*\
  !*** ./src/controller.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addActionDownListener\": () => (/* binding */ addActionDownListener),\n/* harmony export */   \"addActionUpListener\": () => (/* binding */ addActionUpListener),\n/* harmony export */   \"getActionState\": () => (/* binding */ getActionState),\n/* harmony export */   \"handleKeyDown\": () => (/* binding */ handleKeyDown),\n/* harmony export */   \"handleKeyUp\": () => (/* binding */ handleKeyUp),\n/* harmony export */   \"registerActions\": () => (/* binding */ registerActions),\n/* harmony export */   \"removeActionDownListener\": () => (/* binding */ removeActionDownListener),\n/* harmony export */   \"removeActionUpListener\": () => (/* binding */ removeActionUpListener)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n\n\nconst actionDownEmitter = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\nconst actionUpEmitter = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\n\n// Stores the state of each action as a true or false value\n// e.g. forward: true\nconst actionStates = {}\n// Stores the mapping between keys and actions\n// e.g. 47: 'forward'\nconst keyMapping = {}\n\n// As part of init, all of the actions being listened for should be registered.\nconst registerActions = actions => {\n  actions.forEach(({ name, keycode }) => {\n    keyMapping[keycode] = name\n    actionStates[name] = false\n  })\n}\n\nconst getActionState = name => {\n  return actionStates[name] || false\n}\n\nconst handleKeyDown = e => {\n  const actionName = keyMapping[e.which]\n  if (actionName) {\n    const prevState = actionStates[actionName]\n    if (!prevState) {\n      actionDownEmitter.emit(actionName)\n    }\n    actionStates[actionName] = true\n  }\n}\n\nconst handleKeyUp = e => {\n  const actionName = keyMapping[e.which]\n  if (actionName) {\n    actionStates[actionName] = false\n    actionUpEmitter.emit(actionName)\n  }\n}\n\nconst addActionDownListener = (actionName, callback) => {\n  actionDownEmitter.addListener(actionName, callback)\n}\n\nconst addActionUpListener = (actionName, callback) => {\n  actionUpEmitter.addListener(actionName, callback)\n}\n\nconst removeActionDownListener = (actionName, callback) => {\n  actionDownEmitter.removeListener(actionName, callback)\n}\n\nconst removeActionUpListener = (actionName, callback) => {\n  actionUpEmitter.removeListener(actionName, callback)\n}\n\n\n//# sourceURL=webpack://game-server/./src/controller.mjs?");

/***/ }),

/***/ "./src/entities.mjs":
/*!**************************!*\
  !*** ./src/entities.mjs ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEntity\": () => (/* binding */ addEntity),\n/* harmony export */   \"renderEntities\": () => (/* binding */ renderEntities),\n/* harmony export */   \"updateEntities\": () => (/* binding */ updateEntities)\n/* harmony export */ });\nlet entities = []\nlet deadEntities = []\n\nconst addEntity = entity => {\n  entities.push(entity)\n}\n\nconst updateEntities = (dt) => {\n  entities.forEach(entity => {\n    entity.update(dt)\n  })\n  if (entities.some(entity => entity.dead)) {\n    entities = entities.filter(entity => !entity.dead)\n    deadEntities = entities.filter(entity => entity.dead)\n  }\n}\n\nconst renderEntities = (ctx, canvas) => {\n  entities.forEach(entity => {\n    entity.render(ctx, canvas)\n  })\n}\n\n\n//# sourceURL=webpack://game-server/./src/entities.mjs?");

/***/ }),

/***/ "./src/levels/ruins.mjs":
/*!******************************!*\
  !*** ./src/levels/ruins.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _controller_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controller.mjs */ \"./src/controller.mjs\");\n/* harmony import */ var _textures_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../textures.mjs */ \"./src/textures.mjs\");\n/* harmony import */ var _entities_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../entities.mjs */ \"./src/entities.mjs\");\n/* harmony import */ var _player_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player.mjs */ \"./src/player.mjs\");\n\n\n\n\n\nconst $ = (id) => document.getElementById(id)\n\nconst canvas = $('game')\nconst ctx = canvas.getContext('2d')\nctx.fillStyle = 'rgb(33, 35, 47)'\n\nctx.mozImageSmoothingEnabled = false;\nctx.webkitImageSmoothingEnabled = false;\nctx.msImageSmoothingEnabled = false;\nctx.imageSmoothingEnabled = false;\n\nconst texturesData = [\n  {\n    src: 'move.png',\n    name: 'running',\n  },\n  {\n    src: 'move-left.png',\n    name: 'running-left',\n  },\n  {\n    src: 'jump.png',\n    name: 'jump',\n  },\n  {\n    src: 'jump-left.png',\n    name: 'jump-left',\n  },\n  {\n    src: 'fall.png',\n    name: 'fall',\n  },\n  {\n    src: 'fall-left.png',\n    name: 'fall-left',\n  },\n  {\n    src: 'land.png',\n    name: 'land',\n  },\n  {\n    src: 'land-left.png',\n    name: 'land-left',\n  },\n  {\n    src: 'stand.png',\n    name: 'idle',\n  },\n  {\n    src: 'stand-left.png',\n    name: 'idle-left',\n  },\n  // {\n  //   src: 'ruins.png',\n  //   name: 'ground',\n  // },\n  {\n    src: 'ruins.png',\n    name: 'background',\n  },\n  // {\n  //   src: 'snowman.png',\n  //   name: 'snowman',\n  // },\n]\n\nlet lastTime = (new Date()).getTime()\nlet currentTime = 0\nlet dt = 0\n\nconst player = (0,_player_mjs__WEBPACK_IMPORTED_MODULE_3__.createPlayer)(8, canvas.height - 286)\n;(0,_entities_mjs__WEBPACK_IMPORTED_MODULE_2__.addEntity)(player)\n\ndocument.addEventListener('keydown', (e) => {\n  ;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.handleKeyDown)(e)\n}, false)\n\ndocument.addEventListener('keyup', e => {\n  ;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.handleKeyUp)(e)\n}, false)\n\n;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.registerActions)([\n  {\n    name: 'jump',\n    keycode: '32',\n  },\n  {\n    name: 'left',\n    keycode: '65',\n  },\n  {\n    name: 'right',\n    keycode: '68',\n  },\n])\n\n;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.addActionDownListener)('jump', () => {\n  player.jump()\n})\n\nconst init = async () => {\n  await (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.loadTextures)(texturesData)\n\n  window.requestAnimationFrame(update)\n}\n\nconst update = () => {\n  window.requestAnimationFrame(update)\n\n  currentTime = (new Date()).getTime()\n  dt = (currentTime - lastTime) / 1000\n\n  ;(0,_entities_mjs__WEBPACK_IMPORTED_MODULE_2__.updateEntities)(dt)\n\n  render()\n\n  lastTime = currentTime\n}\n\nconst render = () => {\n  // const ground = getTextureByName('ground')\n  const background = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)('background')\n  // const snowman = getTextureByName('snowman')\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n  ctx.drawImage(\n    background,\n    0,\n    0,\n    canvas.width,\n    canvas.height,\n  )\n\n  ;(0,_entities_mjs__WEBPACK_IMPORTED_MODULE_2__.renderEntities)(ctx, canvas)\n\n  // ctx.drawImage(\n  //   snowman,\n  //   120,\n  //   208,\n  //   snowman.width * 2,\n  //   snowman.height * 2,\n  // )\n\n  // ctx.drawImage(\n  //   ground,\n  //   0,\n  //   canvas.height - ground.height * 2,\n  //   ground.width * 2,\n  //   ground.height * 2,\n  // )\n}\n\ninit().then(() => {\n\n}).catch(() => {\n\n})\n\n\n//# sourceURL=webpack://game-server/./src/levels/ruins.mjs?");

/***/ }),

/***/ "./src/player.mjs":
/*!************************!*\
  !*** ./src/player.mjs ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPlayer\": () => (/* binding */ createPlayer)\n/* harmony export */ });\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.mjs */ \"./src/config.mjs\");\n/* harmony import */ var _textures_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./textures.mjs */ \"./src/textures.mjs\");\n/* harmony import */ var _controller_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controller.mjs */ \"./src/controller.mjs\");\n\n\n\n\nconst PLAYER_WIDTH = 32\nconst PLAYER_HEIGHT = 50\n\n// const GROUND = 480 - 245\n// const MAX_Y_SPEED = 60\n// const INITIAL_JUMP_SPEED = -10\nconst MOVE_SPEED = 200\nconst LEFT = -1\nconst RIGHT = 1\n// const GRAVITY = 35\nconst FRAMES = 8\n\nconst createPlayer = (x, y, gravity, initialJumpSpeed, maxYSpeed) => {\n  const GRAVITY = gravity || 35\n  const INITIAL_JUMP_SPEED = initialJumpSpeed || -10\n  const MAX_Y_SPEED = maxYSpeed || 60\n  const GROUND = y\n\n  const player = {\n    x,\n    y,\n    facing: _config_mjs__WEBPACK_IMPORTED_MODULE_0__.DIRECTION.RIGHT,\n    sprite: 'idle',\n    xSpeed: 0,\n    ySpeed: 0,\n    frame: 0,\n    accumulator: 0,\n    fps: 8,\n    grounded: false,\n  }\n\n  player.update = (dt) => {\n    player.accumulator += dt\n    while (player.accumulator >= (1 / player.fps)) {\n      player.accumulator -= (1 / player.fps)\n      player.frame++\n    }\n    if (player.sprite === 'running') {\n      player.frame = player.frame % FRAMES\n    } else if (player.sprite === 'land' && player.frame > 1) {\n      player.sprite = 'running'\n      player.accumulator = 0\n      player.frame = 0\n      player.fps = 8\n    } else if (player.frame > 1) {\n      player.frame = 1\n    }\n\n    player.ySpeed += GRAVITY * dt\n\n    // if (player.ySpeed < 0 && !getActionState('jump')) {\n    //   player.ySpeed -= player.ySpeed * dt * 12\n    //   if (player.ySpeed > 0) {\n    //     player.ySpeed = 0\n    //   }\n    // }\n\n    player.ySpeed = Math.min(player.ySpeed, MAX_Y_SPEED)\n\n    player.y += player.ySpeed\n\n    if (player.y >= GROUND) {\n      player.ySpeed = 0\n      player.y = GROUND\n      player.grounded = true\n      if (player.sprite === 'jump' || player.sprite === 'fall') {\n        player.sprite = 'land'\n        player.frame = 0\n        player.accumulator = 0\n        player.fps = 16\n      }\n    }\n\n    if (player.ySpeed > 0 && player.sprite !== 'fall') {\n      player.sprite = 'fall'\n      player.frame = 0\n      player.accumulator = 0\n    }\n\n    player.xSpeed = 0\n    if ((0,_controller_mjs__WEBPACK_IMPORTED_MODULE_2__.getActionState)('left')) {\n      player.xSpeed -= MOVE_SPEED\n      player.facing = LEFT\n      // afkAccumulator = 0\n    }\n    if ((0,_controller_mjs__WEBPACK_IMPORTED_MODULE_2__.getActionState)('right')) {\n      player.xSpeed += MOVE_SPEED\n      player.facing = RIGHT\n      // afkAccumulator = 0\n    }\n\n    if (player.xSpeed === 0 && player.sprite === 'running') {\n      player.sprite = 'idle'\n      player.frame = 0\n      player.accumulator = 0\n      player.fps = 8\n    } else if (player.sprite === 'idle' && player.xSpeed !== 0) {\n      player.sprite = 'running'\n      player.frame = 0\n      player.accumulator = 0\n      player.fps = 8\n    }\n\n    player.x += player.xSpeed * dt\n  }\n\n  player.jump = () => {\n    // afkAccumulator = 0\n    if (player.grounded) {\n      player.ySpeed = INITIAL_JUMP_SPEED\n      player.grounded = false\n      player.sprite = 'jump'\n      player.frame = 0\n      player.accumulator = 0\n      player.fps = 8\n    }\n  }\n\n  player.render = (ctx, canvas) => {\n    const character = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)(\n      player.facing === _config_mjs__WEBPACK_IMPORTED_MODULE_0__.DIRECTION.RIGHT ?\n        player.sprite :\n        `${player.sprite}-left`\n    )\n    if (player.sprite === 'running' || player.sprite === 'fall') {\n      ctx.drawImage(\n        character,\n        player.frame * PLAYER_WIDTH,\n        0,\n        PLAYER_WIDTH,\n        PLAYER_HEIGHT,\n        player.x,\n        player.y,\n        PLAYER_WIDTH * 2,\n        PLAYER_HEIGHT * 2,\n      )\n    } else {\n      ctx.drawImage(\n        character,\n        player.x,\n        player.y,\n        PLAYER_WIDTH * 2,\n        PLAYER_HEIGHT * 2,\n      )\n    }\n  }\n\n  return player\n}\n\n\n//# sourceURL=webpack://game-server/./src/player.mjs?");

/***/ }),

/***/ "./src/textures.mjs":
/*!**************************!*\
  !*** ./src/textures.mjs ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getTextureByName\": () => (/* binding */ getTextureByName),\n/* harmony export */   \"loadTextures\": () => (/* binding */ loadTextures)\n/* harmony export */ });\nconst textures = {}\n\nconst loadTextures = async (texturesData) =>\n  new Promise((resolve, reject) => {\n    const images = {}\n    texturesData.forEach(textureData => {\n      const image = new Image()\n      image.src = textureData.src\n      image.onload = () => {\n        images[textureData.name] = image\n        textures[textureData.name] = image\n        if (Object.keys(images).length === texturesData.length) {\n          resolve(images)\n        }\n      }\n    })\n  })\n\nconst getTextureByName = name => textures[name] || null\n\n\n//# sourceURL=webpack://game-server/./src/textures.mjs?");

/***/ })

}]);