"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgame_server"] = self["webpackChunkgame_server"] || []).push([["src_levels_index_mjs"],{

/***/ "./src/config.mjs":
/*!************************!*\
  !*** ./src/config.mjs ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DIRECTION\": () => (/* binding */ DIRECTION)\n/* harmony export */ });\nconst DIRECTION = {\n  LEFT: -1,\n  RIGHT: 1,\n}\n\n\n//# sourceURL=webpack://game-server/./src/config.mjs?");

/***/ }),

/***/ "./src/controller.mjs":
/*!****************************!*\
  !*** ./src/controller.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addActionDownListener\": () => (/* binding */ addActionDownListener),\n/* harmony export */   \"addActionUpListener\": () => (/* binding */ addActionUpListener),\n/* harmony export */   \"getActionState\": () => (/* binding */ getActionState),\n/* harmony export */   \"handleKeyDown\": () => (/* binding */ handleKeyDown),\n/* harmony export */   \"handleKeyUp\": () => (/* binding */ handleKeyUp),\n/* harmony export */   \"registerActions\": () => (/* binding */ registerActions),\n/* harmony export */   \"removeActionDownListener\": () => (/* binding */ removeActionDownListener),\n/* harmony export */   \"removeActionUpListener\": () => (/* binding */ removeActionUpListener)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n\n\nconst actionDownEmitter = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\nconst actionUpEmitter = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\n\n// Stores the state of each action as a true or false value\n// e.g. forward: true\nconst actionStates = {}\n// Stores the mapping between keys and actions\n// e.g. 47: 'forward'\nconst keyMapping = {}\n\n// As part of init, all of the actions being listened for should be registered.\nconst registerActions = actions => {\n  actions.forEach(({ name, keycode }) => {\n    keyMapping[keycode] = name\n    actionStates[name] = false\n  })\n}\n\nconst getActionState = name => {\n  return actionStates[name] || false\n}\n\nconst handleKeyDown = e => {\n  const actionName = keyMapping[e.which]\n  if (actionName) {\n    const prevState = actionStates[actionName]\n    if (!prevState) {\n      actionDownEmitter.emit(actionName)\n    }\n    actionStates[actionName] = true\n  }\n}\n\nconst handleKeyUp = e => {\n  const actionName = keyMapping[e.which]\n  if (actionName) {\n    actionStates[actionName] = false\n    actionUpEmitter.emit(actionName)\n  }\n}\n\nconst addActionDownListener = (actionName, callback) => {\n  actionDownEmitter.addListener(actionName, callback)\n}\n\nconst addActionUpListener = (actionName, callback) => {\n  actionUpEmitter.addListener(actionName, callback)\n}\n\nconst removeActionDownListener = (actionName, callback) => {\n  actionDownEmitter.removeListener(actionName, callback)\n}\n\nconst removeActionUpListener = (actionName, callback) => {\n  actionUpEmitter.removeListener(actionName, callback)\n}\n\n\n//# sourceURL=webpack://game-server/./src/controller.mjs?");

/***/ }),

/***/ "./src/entities.mjs":
/*!**************************!*\
  !*** ./src/entities.mjs ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEntity\": () => (/* binding */ addEntity),\n/* harmony export */   \"renderEntities\": () => (/* binding */ renderEntities),\n/* harmony export */   \"updateEntities\": () => (/* binding */ updateEntities)\n/* harmony export */ });\nlet entities = []\nlet deadEntities = []\n\nconst addEntity = entity => {\n  entities.push(entity)\n}\n\nconst updateEntities = (dt) => {\n  entities.forEach(entity => {\n    entity.update(dt)\n  })\n  if (entities.some(entity => entity.dead)) {\n    entities = entities.filter(entity => !entity.dead)\n    deadEntities = entities.filter(entity => entity.dead)\n  }\n}\n\nconst renderEntities = (ctx, canvas) => {\n  entities.forEach(entity => {\n    entity.render(ctx, canvas)\n  })\n}\n\n\n//# sourceURL=webpack://game-server/./src/entities.mjs?");

/***/ }),

/***/ "./src/levels/index.mjs":
/*!******************************!*\
  !*** ./src/levels/index.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _controller_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controller.mjs */ \"./src/controller.mjs\");\n/* harmony import */ var _textures_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../textures.mjs */ \"./src/textures.mjs\");\n/* harmony import */ var _entities_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../entities.mjs */ \"./src/entities.mjs\");\n/* harmony import */ var _player_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player.mjs */ \"./src/player.mjs\");\n\n\n\n\n// import {\n//   loadAudio,\n//   getAudioByName,\n// } from './audio.mjs'\n\nconst $ = (id) => document.getElementById(id)\n\nconst startButton = $('start-btn')\n\nconst canvas = $('game')\nconst ctx = canvas.getContext('2d')\nctx.fillStyle = 'rgb(33, 35, 47)'\n\nctx.mozImageSmoothingEnabled = false;\nctx.webkitImageSmoothingEnabled = false;\nctx.msImageSmoothingEnabled = false;\nctx.imageSmoothingEnabled = false;\n\nconst texturesData = [\n  {\n    src: 'move.png',\n    name: 'running',\n  },\n  {\n    src: 'move-left.png',\n    name: 'running-left',\n  },\n  {\n    src: 'jump.png',\n    name: 'jump',\n  },\n  {\n    src: 'jump-left.png',\n    name: 'jump-left',\n  },\n  {\n    src: 'fall.png',\n    name: 'fall',\n  },\n  {\n    src: 'fall-left.png',\n    name: 'fall-left',\n  },\n  {\n    src: 'land.png',\n    name: 'land',\n  },\n  {\n    src: 'land-left.png',\n    name: 'land-left',\n  },\n  {\n    src: 'stand.png',\n    name: 'idle',\n  },\n  {\n    src: 'stand-left.png',\n    name: 'idle-left',\n  },\n  {\n    src: 'ground.png',\n    name: 'ground',\n  },\n  {\n    src: 'background.png',\n    name: 'background',\n  },\n  // {\n  //   src: 'avatar.png',\n  //   name: 'avatar',\n  // },\n  // {\n  //   src: 'afk.png',\n  //   name: 'afk',\n  // },\n  // {\n  //   src: 'boss.png',\n  //   name: 'boss',\n  // },\n  // {\n  //   src: 'pumpkin.png',\n  //   name: 'pumpkin',\n  // },\n  // {\n  //   src: 'red-gem.png',\n  //   name: 'red-gem',\n  // },\n  // {\n  //   src: 'purple-gem.png',\n  //   name: 'green-gem',\n  // },\n  // {\n  //   src: 'green-gem.png',\n  //   name: 'purple-gem',\n  // },\n  {\n    src: 'man.png',\n    name: 'man',\n  },\n  {\n    src: 'man2.png',\n    name: 'man2',\n  },\n  // {\n  //   src: 'mage3.png',\n  //   name: 'mage',\n  // },\n  // {\n  //   src: 'mage2.png',\n  //   name: 'mage2',\n  // },\n  // {\n  //   src: 'slime.png',\n  //   name: 'slime',\n  // },\n  // {\n  //   src: 'squid.png',\n  //   name: 'squid',\n  // },\n  {\n    src: 'boss2.png',\n    name: 'boss2',\n  },\n  // {\n  //   src: 'blast.png',\n  //   name: 'blast',\n  // },\n  // {\n  //   src: 'blast-left.png',\n  //   name: 'blast-left',\n  // },\n  {\n    src: 'leaf.png',\n    name: 'leaf',\n  },\n]\n\n// const soundsData = [\n//   {\n//     src: 'music.wav',\n//     name: 'music',\n//   },\n// ]\n\nlet running = false\n\n// const AVATAR_WIDTH = 40\n// const AVATAR_HEIGHT = 40\n\n// const FRAMES_AVATAR = 15\n\nlet lastTime = (new Date()).getTime()\nlet currentTime = 0\nlet dt = 0\n\n// const AFK_TIME = 10\n// let afkAccumulator = 0\n\nconst player = (0,_player_mjs__WEBPACK_IMPORTED_MODULE_3__.createPlayer)(64, canvas.height - 245)\n;(0,_entities_mjs__WEBPACK_IMPORTED_MODULE_2__.addEntity)(player)\n\n// const player = {\n//   x: PLAYER_WIDTH * 2,\n//   y: START_Y,\n//   facing: RIGHT,\n//   xSpeed: 0,\n//   ySpeed: 0,\n//   frame: 0,\n//   accumulator: 0,\n//   fps: 8,\n//   frameAvatar: 0,\n//   accumulatorAvatar: 0,\n//   fpsAvatar: 8,\n//   grounded: false,\n//   sprite: 'running',\n//   spriteAvatar: 'avatar',\n// }\n\n// const blasts = []\n//\n// const createBlast = (x, y) => {\n//   const blast = {\n//     x,\n//     y,\n//     xSpeed: player.facing * 300,\n//     facing: player.facing,\n//   }\n//   blasts.push(blast)\n//   return blast\n// }\n\ndocument.addEventListener('keydown', (e) => {\n  ;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.handleKeyDown)(e)\n}, false)\n\ndocument.addEventListener('keyup', e => {\n  ;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.handleKeyUp)(e)\n}, false)\n\n;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.registerActions)([\n  {\n    name: 'jump',\n    keycode: '32',\n  },\n  {\n    name: 'left',\n    keycode: '65',\n  },\n  {\n    name: 'right',\n    keycode: '68',\n  },\n  // {\n  //   name: 'shoot',\n  //   keycode: '75',\n  // },\n])\n\n;(0,_controller_mjs__WEBPACK_IMPORTED_MODULE_0__.addActionDownListener)('jump', () => {\n  player.jump()\n})\n\n// addActionDownListener('shoot', () => {\n// afkAccumulator = 0\n// createBlast(player.x + PLAYER_WIDTH, player.y + PLAYER_HEIGHT)\n// })\n\nconst init = async () => {\n  await (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.loadTextures)(texturesData)\n  // sounds = await loadAudio(soundsData)\n\n  // const music = getAudioByName('music')\n\n  // music.addEventListener('ended', function () {\n  //   this.currentTime = 0\n  //   this.play()\n  // }, false)\n  // music.play()\n\n  window.requestAnimationFrame(update)\n}\n\nconst update = () => {\n  window.requestAnimationFrame(update)\n\n  currentTime = (new Date()).getTime()\n  dt = (currentTime - lastTime) / 1000\n\n  // afkAccumulator += dt\n\n  // player.accumulatorAvatar += dt\n  // while (player.accumulatorAvatar >= (1 / player.fpsAvatar)) {\n  //   player.accumulatorAvatar -= (1 / player.fpsAvatar)\n  //   player.frameAvatar++\n  // }\n  // if (player.spriteAvatar === 'avatar') {\n  //   player.frameAvatar = player.frameAvatar % FRAMES_AVATAR\n  // } else {\n  //   if (player.frameAvatar > 7) {\n  //     player.frameAvatar = 7\n  //   }\n  // }\n\n  // blasts.forEach(blast => {\n  //   blast.x += blast.xSpeed * dt\n  // })\n  //\n  // if (afkAccumulator > AFK_TIME && player.spriteAvatar === 'avatar') {\n  //   player.frameAvatar = 0\n  //   player.spriteAvatar = 'afk'\n  // }\n  ;(0,_entities_mjs__WEBPACK_IMPORTED_MODULE_2__.updateEntities)(dt)\n\n  render()\n\n  lastTime = currentTime\n}\n\nconst render = () => {\n  const ground = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)('ground')\n  const background = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)('background')\n  // const avatar = getTextureByName(player.spriteAvatar)\n  // const boss = getTextureByName('boss')\n  // const pumpkin = getTextureByName('pumpkin')\n  // const redGem = getTextureByName('red-gem')\n  // const greenGem = getTextureByName('green-gem')\n  const man = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)('man')\n  const man2 = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)('man2')\n  // const mage = getTextureByName('mage')\n  // const mage2 = getTextureByName('mage2')\n  // const squid = getTextureByName('squid')\n  // const slime = getTextureByName('slime')\n  // const boss2 = getTextureByName('boss2')\n  // const shot = getTextureByName('blast')\n  // const shotLeft = getTextureByName('blast-left')\n  const leaf = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)('leaf')\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n  ctx.drawImage(\n    background,\n    0,\n    0,\n    canvas.width,\n    canvas.height * 0.75,\n  )\n\n  // ctx.drawImage(\n  //   avatar,\n  //   player.frameAvatar * AVATAR_WIDTH,\n  //   0,\n  //   AVATAR_WIDTH,\n  //   AVATAR_HEIGHT,\n  //   8,\n  //   8,\n  //   AVATAR_WIDTH * 2,\n  //   AVATAR_HEIGHT * 2,\n  // )\n\n  // ctx.drawImage(\n  //   redGem,\n  //   (canvas.width * 0.5) - redGem.width * 2,\n  //   canvas.height - ground.height * 2 - redGem.height,\n  //   redGem.width * 2,\n  //   redGem.height * 2,\n  // )\n\n  // ctx.drawImage(\n  //   slime,\n  //   (canvas.width * 0.5) - slime.width * 2,\n  //   canvas.height - ground.height * 2 - slime.height,\n  //   slime.width * 2,\n  //   slime.height * 2,\n  // )\n  //\n  // ctx.drawImage(\n  //   squid,\n  //   (canvas.width * 0.5) - squid.width * 4,\n  //   canvas.height - ground.height * 2 - squid.height,\n  //   squid.width * 2,\n  //   squid.height * 2,\n  // )\n\n  // ctx.drawImage(\n  //   boss2,\n  //   canvas.width * 0.5 - boss2.width,\n  //   canvas.height - ground.height * 2 - boss2.height * 2 + 50,\n  //   boss2.width * 2,\n  //   boss2.height * 2,\n  // )\n\n  ctx.drawImage(\n    man,\n    canvas.width - man.width * 3,\n    canvas.height - ground.height * 2 - man.height * 1.6,\n    man.width * 2,\n    man.height * 2,\n  )\n\n  ctx.drawImage(\n    man2,\n    canvas.width - man2.width * 6,\n    canvas.height - ground.height * 2 - man2.height * 1.6,\n    man2.width * 2,\n    man2.height * 2,\n  )\n\n  ;(0,_entities_mjs__WEBPACK_IMPORTED_MODULE_2__.renderEntities)(ctx, canvas)\n\n  // blasts.forEach(blast => {\n  //   ctx.drawImage(\n  //     blast.facing === LEFT ? shotLeft : shot,\n  //     blast.x - shot.width * 0.5,\n  //     blast.y - shot.height * 0.5,\n  //     shot.width,\n  //     shot.height,\n  //   )\n  // })\n\n  // ctx.drawImage(\n  //   pumpkin,\n  //   canvas.width - pumpkin.width * 2,\n  //   canvas.height - ground.height * 2 - pumpkin.height * 0.75,\n  //   pumpkin.width * 2,\n  //   pumpkin.height * 2,\n  // )\n\n  ctx.drawImage(\n    leaf,\n    canvas.width - leaf.width * 6,\n    canvas.height - ground.height * 2 - leaf.height * 1.6,\n    leaf.width,\n    leaf.height,\n  )\n\n  ctx.drawImage(\n    ground,\n    0,\n    canvas.height - ground.height * 2,\n    ground.width * 2,\n    ground.height * 2,\n  )\n\n  // ctx.drawImage(\n  //   greenGem,\n  //   (canvas.width * 0.5) + greenGem.width,\n  //   canvas.height - ground.height * 2 - greenGem.height,\n  //   greenGem.width * 2,\n  //   greenGem.height * 2,\n  // )\n\n  // ctx.drawImage(\n  //   mage,\n  //   (canvas.width * 0.5) + mage.width * 2,\n  //   canvas.height - ground.height * 2 - mage.height,\n  //   mage.width * 2,\n  //   mage.height * 2,\n  // )\n\n  // ctx.drawImage(\n  //   mage2,\n  //   (canvas.width * 0.5),\n  //   canvas.height - ground.height * 2 - mage2.height,\n  //   mage2.width * 2,\n  //   mage2.height * 2,\n  // )\n\n  // ctx.drawImage(\n  //   boss,\n  //   canvas.width - boss.width * 2,\n  //   canvas.height - ground.height * 2 - boss.height * 2,\n  //   boss.width * 2,\n  //   boss.height * 2,\n  // )\n}\n\n// startButton.onclick = async () => {\n//   if (!running) {\n//     running = true\n//     await init()\n//   }\n// }\n\ninit().then(() => {\n\n}).catch(() => {\n\n})\n\n\n\n//# sourceURL=webpack://game-server/./src/levels/index.mjs?");

/***/ }),

/***/ "./src/player.mjs":
/*!************************!*\
  !*** ./src/player.mjs ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPlayer\": () => (/* binding */ createPlayer)\n/* harmony export */ });\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.mjs */ \"./src/config.mjs\");\n/* harmony import */ var _textures_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./textures.mjs */ \"./src/textures.mjs\");\n/* harmony import */ var _controller_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controller.mjs */ \"./src/controller.mjs\");\n\n\n\n\nconst PLAYER_WIDTH = 32\nconst PLAYER_HEIGHT = 50\n\n// const GROUND = 480 - 245\n// const MAX_Y_SPEED = 60\n// const INITIAL_JUMP_SPEED = -10\nconst MOVE_SPEED = 200\nconst LEFT = -1\nconst RIGHT = 1\n// const GRAVITY = 35\nconst FRAMES = 8\n\nconst createPlayer = (x, y, gravity, initialJumpSpeed, maxYSpeed) => {\n  const GRAVITY = gravity || 35\n  const INITIAL_JUMP_SPEED = initialJumpSpeed || -10\n  const MAX_Y_SPEED = maxYSpeed || 60\n  const GROUND = y\n\n  const player = {\n    x,\n    y,\n    facing: _config_mjs__WEBPACK_IMPORTED_MODULE_0__.DIRECTION.RIGHT,\n    sprite: 'idle',\n    xSpeed: 0,\n    ySpeed: 0,\n    frame: 0,\n    accumulator: 0,\n    fps: 8,\n    grounded: false,\n  }\n\n  player.update = (dt) => {\n    player.accumulator += dt\n    while (player.accumulator >= (1 / player.fps)) {\n      player.accumulator -= (1 / player.fps)\n      player.frame++\n    }\n    if (player.sprite === 'running') {\n      player.frame = player.frame % FRAMES\n    } else if (player.sprite === 'land' && player.frame > 1) {\n      player.sprite = 'running'\n      player.accumulator = 0\n      player.frame = 0\n      player.fps = 8\n    } else if (player.frame > 1) {\n      player.frame = 1\n    }\n\n    player.ySpeed += GRAVITY * dt\n\n    // if (player.ySpeed < 0 && !getActionState('jump')) {\n    //   player.ySpeed -= player.ySpeed * dt * 12\n    //   if (player.ySpeed > 0) {\n    //     player.ySpeed = 0\n    //   }\n    // }\n\n    player.ySpeed = Math.min(player.ySpeed, MAX_Y_SPEED)\n\n    player.y += player.ySpeed\n\n    if (player.y >= GROUND) {\n      player.ySpeed = 0\n      player.y = GROUND\n      player.grounded = true\n      if (player.sprite === 'jump' || player.sprite === 'fall') {\n        player.sprite = 'land'\n        player.frame = 0\n        player.accumulator = 0\n        player.fps = 16\n      }\n    }\n\n    if (player.ySpeed > 0 && player.sprite !== 'fall') {\n      player.sprite = 'fall'\n      player.frame = 0\n      player.accumulator = 0\n    }\n\n    player.xSpeed = 0\n    if ((0,_controller_mjs__WEBPACK_IMPORTED_MODULE_2__.getActionState)('left')) {\n      player.xSpeed -= MOVE_SPEED\n      player.facing = LEFT\n      // afkAccumulator = 0\n    }\n    if ((0,_controller_mjs__WEBPACK_IMPORTED_MODULE_2__.getActionState)('right')) {\n      player.xSpeed += MOVE_SPEED\n      player.facing = RIGHT\n      // afkAccumulator = 0\n    }\n\n    if (player.xSpeed === 0 && player.sprite === 'running') {\n      player.sprite = 'idle'\n      player.frame = 0\n      player.accumulator = 0\n      player.fps = 8\n    } else if (player.sprite === 'idle' && player.xSpeed !== 0) {\n      player.sprite = 'running'\n      player.frame = 0\n      player.accumulator = 0\n      player.fps = 8\n    }\n\n    player.x += player.xSpeed * dt\n  }\n\n  player.jump = () => {\n    // afkAccumulator = 0\n    if (player.grounded) {\n      player.ySpeed = INITIAL_JUMP_SPEED\n      player.grounded = false\n      player.sprite = 'jump'\n      player.frame = 0\n      player.accumulator = 0\n      player.fps = 8\n    }\n  }\n\n  player.render = (ctx, canvas) => {\n    const character = (0,_textures_mjs__WEBPACK_IMPORTED_MODULE_1__.getTextureByName)(\n      player.facing === _config_mjs__WEBPACK_IMPORTED_MODULE_0__.DIRECTION.RIGHT ?\n        player.sprite :\n        `${player.sprite}-left`\n    )\n    if (player.sprite === 'running' || player.sprite === 'fall') {\n      ctx.drawImage(\n        character,\n        player.frame * PLAYER_WIDTH,\n        0,\n        PLAYER_WIDTH,\n        PLAYER_HEIGHT,\n        player.x,\n        player.y,\n        PLAYER_WIDTH * 2,\n        PLAYER_HEIGHT * 2,\n      )\n    } else {\n      ctx.drawImage(\n        character,\n        player.x,\n        player.y,\n        PLAYER_WIDTH * 2,\n        PLAYER_HEIGHT * 2,\n      )\n    }\n  }\n\n  return player\n}\n\n\n//# sourceURL=webpack://game-server/./src/player.mjs?");

/***/ }),

/***/ "./src/textures.mjs":
/*!**************************!*\
  !*** ./src/textures.mjs ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getTextureByName\": () => (/* binding */ getTextureByName),\n/* harmony export */   \"loadTextures\": () => (/* binding */ loadTextures)\n/* harmony export */ });\nconst textures = {}\n\nconst loadTextures = async (texturesData) =>\n  new Promise((resolve, reject) => {\n    const images = {}\n    texturesData.forEach(textureData => {\n      const image = new Image()\n      image.src = textureData.src\n      image.onload = () => {\n        images[textureData.name] = image\n        textures[textureData.name] = image\n        if (Object.keys(images).length === texturesData.length) {\n          resolve(images)\n        }\n      }\n    })\n  })\n\nconst getTextureByName = name => textures[name] || null\n\n\n//# sourceURL=webpack://game-server/./src/textures.mjs?");

/***/ })

}]);